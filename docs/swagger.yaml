basePath: /api
definitions:
  models.APIError:
    properties:
      code:
        example: 400
        type: integer
      details:
        example: The error_details field is required
        type: string
      message:
        example: Invalid parameters
        type: string
    required:
    - code
    - message
    type: object
  models.ErrorRequest:
    properties:
      context:
        example: Deployment in Kubernetes 1.26 cluster with custom Docker image
        type: string
      error_details:
        example: 'CrashLoopBackOff: container failed to start'
        type: string
    required:
    - error_details
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorSolution'
      message:
        example: Analysis completed successfully
        type: string
    required:
    - error
    type: object
  models.ErrorSolution:
    properties:
      causa:
        example: Invalid Docker image
        type: string
      solucao:
        example: |-
          kubectl describe pod my-pod
          kubectl logs my-pod --previous
        type: string
    required:
    - causa
    - solucao
    type: object
host: localhost:8080
info:
  contact: {}
  description: API para resolução de erros técnicos utilizando LLMs locais
  title: Hefestus API
  version: "1.0"
paths:
  /errors/{domain}:
    post:
      consumes:
      - application/json
      description: Recebe detalhes de um erro e seu contexto, retornando possíveis
        soluções baseadas em LLM
      parameters:
      - description: Domínio técnico (kubernetes, github, argocd)
        enum:
        - kubernetes
        - github
        - argocd
        in: path
        name: domain
        required: true
        type: string
      - description: Detalhes do erro e contexto
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ErrorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Solução para o erro
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "400":
          description: Erro de validação ou requisição inválida
          schema:
            $ref: '#/definitions/models.APIError'
        "404":
          description: Domínio não encontrado
          schema:
            $ref: '#/definitions/models.APIError'
        "500":
          description: Erro interno do servidor
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Analisar e resolver erros por domínio
      tags:
      - errors
  /health:
    get:
      description: Verifica se o serviço está em funcionamento
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verificar saúde do serviço
      tags:
      - system
schemes:
- http
swagger: "2.0"
